{"version":3,"sources":["components/Header/index.tsx","app/Slices/blog.ts","app/hooks.ts","components/BlogForm/index.tsx","components/BlogList/index.tsx","components/BlogDetails/CommentForm/index.tsx","components/BlogDetails/Comment/index.tsx","components/BlogDetails/index.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","ElevateAppBar","Fragment","CssBaseline","AppBar","Toolbar","Typography","variant","style","textDecoration","color","to","blogSlice","createSlice","name","initialState","posts","reducers","addPost","state","action","payload","set","JSON","stringify","setPosts","addComment","map","post","blogId","toString","comments","comment","commentId","date","replyComment","parentCommentId","prevComment","findComment","values","prevCommentChildren","childernValues","prevCommentValue","actions","selectPost","blogReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","useStyles","makeStyles","theme","formControl","margin","spacing","display","dialog","breakpoints","down","minWidth","overflow","up","textArea","minHeight","border","marginTop","fontSize","width","BlogForm","handleAddPost","handleClose","open","classes","useState","title","uuidv4","content","Date","toLocaleDateString","setState","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","className","FormControl","component","FormLabel","TextField","autoFocus","fullWidth","value","onChange","e","prev","TextareaAutosize","placeholder","disabled","DialogActions","Button","onClick","columns","label","align","root","padding","container","maxHeight","BlogList","rows","dispatch","page","setPage","rowsPerPage","setRowsPerPage","setOpen","Paper","Grid","direction","justify","alignItems","item","xs","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","format","code","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","commentTitle","textAlign","fontWeight","paper","palette","text","secondary","rootCard","button","CommentForm","isReply","handleCancel","useParams","Comment","string","parentId","paddingComment","rootNestedCard","background","marginLeft","bullet","transform","titleCard","pos","marginBottom","cardHeader","cardTitle","isOpen","nestedComments","toLocaleTimeString","month","day","year","Card","CardHeader","avatar","Avatar","toUpperCase","charAt","subheader","CardContent","CardActions","flexGrow","FullWidthGrid","blog","useMemo","find","element","App","useEffect","a","get","then","parse","getPosts","Container","exact","path","store","configureStore","reducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.539d401a.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  children: React.ReactElement;\n}\n\nfunction ElevationScroll(props: Props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nexport default function ElevateAppBar(props: Props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\">\n              <Link\n                style={{ textDecoration: \"none\", color: \"#fff\" }}\n                to={\"/blog_post\"}\n              >\n                {\"Blog Post\"}\n              </Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { set } from \"idb-keyval\";\n\nexport interface blogState {\n  posts: any;\n}\n\nconst initialState: blogState = {\n  posts: [],\n};\n\nexport const blogSlice = createSlice({\n  name: \"blogReducer\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    addPost: (state, action: PayloadAction<any>) => {\n      let posts = [...state.posts, action.payload];\n      set(\"posts\", JSON.stringify(posts));\n      state.posts = posts;\n    },\n    setPosts: (state, action: PayloadAction<any>) => {\n      let posts = action.payload;\n      state.posts = posts;\n    },\n    addComment: (state, action: PayloadAction<any>) => {\n      const posts = state.posts.map((post: any) => {\n        if (post?.blogId.toString() === action.payload?.blogId.toString()) {\n          const comments = post?.comments || [];\n          post[\"comments\"] = [\n            ...comments,\n            {\n              name: action.payload?.name,\n              comment: action.payload?.comment,\n              commentId: action.payload?.commentId,\n              date: action.payload?.date,\n              children: [],\n            },\n          ];\n        }\n        return post;\n      });\n      set(\"posts\", JSON.stringify(posts));\n      state.posts = posts;\n    },\n    replyComment: (state, action) => {\n      const { blogId, name, comment, commentId, date, parentCommentId } =\n        action.payload;\n      const posts = state.posts.map((post: any) => {\n        if (post?.blogId.toString() === blogId.toString()) {\n          const comments = (post.comments || []).map((prevComment: any) => {\n            const findComment = (values: any, target: string) => {\n              if (values.commentId === target) {\n                const prevCommentChildren = values[\"children\"] || [];\n                values[\"children\"] = [\n                  ...prevCommentChildren,\n                  { name, comment, commentId, date },\n                ];\n                return values;\n              }\n              const childernValues = values?.children || [];\n              for (const child of childernValues) {\n                const prevCommentValue: any = findComment(child, parentCommentId);\n                if (prevCommentValue) {\n                  return prevCommentValue;\n                }\n              }\n            };\n            findComment(prevComment, parentCommentId);\n            return prevComment;\n          });\n          post[\"comments\"] = comments;\n        }\n        return post;\n      });\n      set(\"posts\", JSON.stringify(posts));\n      state.posts = posts;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addPost, setPosts, addComment, replyComment } =\n  blogSlice.actions;\n\nexport const selectPost = (state: RootState) => state.blogReducer.posts;\n\nexport default blogSlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  makeStyles,\n  DialogTitle,\n  TextareaAutosize,\n  FormControl,\n  FormLabel,\n} from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n    display: \"flex\",\n  },\n  dialog: {\n    [theme.breakpoints.down('xs')]: {\n      minWidth: 200,\n      overflow:'hidden'\n    },\n    [theme.breakpoints.down('sm')]: {\n      minWidth: 300,\n      overflow:'hidden'\n    },\n    [theme.breakpoints.up('md')]: {\n      minWidth: 500,\n    },\n    [theme.breakpoints.up('lg')]: {\n      minWidth: 500,\n    },\n  },\n  textArea: {\n    minHeight: 100,\n    border: \"1px solid #949494\",\n    marginTop: 16,\n    fontSize: 15,\n    color: \"#212121\",\n    width: \"100%\",\n  },\n}));\ninterface BlogFormProps {\n  handleAddPost: any;\n  handleClose: any;\n  open: boolean;\n}\n\nexport default function BlogForm({\n  handleAddPost,\n  handleClose,\n  open,\n}: BlogFormProps) {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    title: \"\",\n    blogId: uuidv4(),\n    content: \"\",\n    date: new Date().toLocaleDateString(),\n  });\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">New Post</DialogTitle>\n        <DialogContent className={classes.dialog}>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel>Title</FormLabel>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              fullWidth\n              value={state.title}\n              onChange={(e) =>\n                setState((prev) => {\n                  return {\n                    ...prev,\n                    title: e.target.value,\n                  };\n                })\n              }\n            />\n          </FormControl>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel>Content</FormLabel>\n            <TextareaAutosize\n              className={classes.textArea}\n              placeholder=\"Please enter content of post\"\n              value={state.content}\n              onChange={(e) =>\n                setState((prev) => {\n                  return {\n                    ...prev,\n                    content: e.target.value,\n                  };\n                })\n              }\n            />\n          </FormControl>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel>Date</FormLabel>\n            <TextField id=\"date\" fullWidth disabled value={state.date} />\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => handleAddPost(state)}\n            color=\"primary\"\n            disabled={!state.title || !state.content}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { selectPost } from \"../../app/Slices/blog\";\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport { addPost } from \"../../app/Slices/blog\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Paper,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport BlogForm from \"../BlogForm\";\ninterface Column {\n  id: \"title\" | \"date\" | \"content\";\n  label: string;\n  minWidth?: number;\n  align?: \"right\";\n  format?: (value: number) => string;\n}\nconst columns: Column[] = [\n  { id: \"title\", label: \"Title\", minWidth: 170 },\n  { id: \"content\", label: \"Content\", minWidth: 100 },\n  {\n    id: \"date\",\n    label: \"Date\",\n    minWidth: 170,\n    align: \"right\",\n  },\n];\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    padding: 20,\n  },\n  container: {\n    maxHeight: 500,\n    marginTop: 30,\n  },\n});\n\nexport default function BlogList() {\n  const rows = useAppSelector(selectPost);\n  const dispatch = useAppDispatch();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleAddPost = (state: any) => {\n    dispatch(addPost(state));\n    handleClose();\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs={9}>\n          <Typography variant=\"h5\" component=\"h5\">\n            Blog Post list\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n            Add Post\n          </Button>\n        </Grid>\n      </Grid>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row: any) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      if (column.id === \"title\") {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            <Link\n                              style={{ textDecoration: \"none\" }}\n                              to={`/blog_post/blog-details/${row[\"blogId\"]}`}\n                            >\n                              {column.format && typeof value === \"number\"\n                                ? column.format(value)\n                                : value}\n                            </Link>\n                          </TableCell>\n                        );\n                      }\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      {open && (\n        <BlogForm\n          open={open}\n          handleClose={handleClose}\n          handleAddPost={handleAddPost}\n        />\n      )}\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  TextareaAutosize,\n  Button,\n  Theme,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addComment, replyComment } from \"../../../app/Slices/blog\";\nimport { useParams } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\ninterface commentFormProps {\n  isReply?: boolean;\n  handleCancel?: any;\n  commentId?: string;\n}\nconst useStyles = makeStyles((theme: Theme) => ({\n  commentTitle: {\n    textAlign: \"left\",\n    fontWeight: 900,\n    color: \"#383232e8\",\n    fontSize: 18,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n  },\n  textArea: {\n    minHeight: 100,\n    border: \"1px solid #949494\",\n    fontSize: 15,\n    color: \"#212121\",\n    width: \"100%\",\n  },\n  rootCard: {\n    minWidth: 275,\n  },\n  button: {\n    display: \"flex\",\n  },\n}));\n\nexport default function CommentForm({\n  isReply = false,\n  handleCancel,\n  commentId,\n}: commentFormProps) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    name: \"\",\n    comment: \"\",\n    commentId: uuidv4(),\n    date: new Date().toString(),\n  });\n  const { blogId } = useParams<{ blogId: string }>();\n\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={1}>\n          {!isReply && (\n            <Grid item xs={12}>\n              <Typography\n                component={\"h5\"}\n                variant={\"h5\"}\n                className={classes.commentTitle}\n              >\n                {\"Add a comment\"}\n              </Typography>\n            </Grid>\n          )}\n          <Grid item xs={12}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={\"Name\"}\n              fullWidth\n              variant=\"outlined\"\n              value={state.name}\n              onChange={(e) =>\n                setState((prev) => {\n                  return {\n                    ...prev,\n                    name: e.target.value,\n                  };\n                })\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextareaAutosize\n              className={classes.textArea}\n              aria-label=\"maximum height\"\n              placeholder={isReply ? \"Reply\" : \"Comments\"}\n              value={state.comment}\n              onChange={(e) =>\n                setState((prev) => {\n                  return {\n                    ...prev,\n                    comment: e.target.value,\n                  };\n                })\n              }\n            />\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={() => {\n                if (isReply) {\n                  dispatch(\n                    replyComment({\n                      ...state,\n                      blogId,\n                      parentCommentId: commentId,\n                    })\n                  );\n                } else {\n                  dispatch(addComment({ ...state, blogId }));\n                }\n                setState({\n                  name: \"\",\n                  comment: \"\",\n                  commentId: uuidv4(),\n                  date: new Date().toString(),\n                });\n                handleCancel?.();\n              }}\n              disabled={!state.name || !state.comment}\n              color=\"primary\"\n            >\n              {isReply ? \"Reply\" : \"Submit\"}\n            </Button>\n            {isReply && (\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                onClick={handleCancel}\n              >\n                {\"Cancel\"}\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  Typography,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  CardHeader,\n  Avatar,\n} from \"@material-ui/core\";\nimport CommentForm from \"../CommentForm\";\ninterface initStylesProps {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  paddingComment: number;\n}\ninterface commentProps {\n  comment: any;\n  parentId?: string;\n  paddingComment?: number;\n}\nconst initStyles = (props: initStylesProps) => {\n  return makeStyles(() => ({\n    commentTitle: {\n      textAlign: \"left\",\n      fontWeight: 900,\n      color: \"#383232e8\",\n      fontSize: 18,\n    },\n    textArea: {\n      minHeight: 100,\n      border: \"1px solid #949494\",\n      fontSize: 15,\n      color: \"#212121\",\n      width: \"100%\",\n    },\n    rootCard: {\n      minWidth: 275,\n    },\n    rootNestedCard: {\n      minWidth: 275,\n      background: \"#f3f6ff\",\n      padding: 10,\n      margin: 10,\n      marginLeft: 10 * props?.paddingComment,\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\",\n    },\n    titleCard: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    button: {\n      display: \"flex\",\n    },\n    cardHeader: {\n      textAlign: \"left\",\n    },\n    content: {\n      display: \"flex\",\n    },\n    cardTitle: {\n      color: \"#5c5fe3\",\n    },\n  })); // returns a hook\n};\n\nexport default function Comment({\n  comment,\n  parentId,\n  paddingComment = 1,\n}: commentProps) {\n  const useStyles = initStyles({ paddingComment });\n  const classes = useStyles();\n  const [isOpen, setOpen] = useState(false);\n  const nestedComments = (comment?.children || []).map((comment: any) => {\n    if (parentId) {\n      paddingComment++;\n    } else {\n      paddingComment = 1;\n    }\n    return (\n      <Comment\n        key={comment.id}\n        comment={comment}\n        parentId={comment?.commentId}\n        paddingComment={paddingComment}\n      />\n    );\n  });\n  const options: object = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n  const date = new Date(comment.date).toLocaleTimeString(\"en-US\", options);\n  function capitalizeFirstLetter(string: string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return (\n    <Grid item xs={12}>\n      <Card className={parentId ? classes.rootNestedCard : classes.rootCard}>\n        <CardHeader\n          className={classes.cardHeader}\n          avatar={\n            <Avatar aria-label=\"recipe\">\n              {comment.name.toString()?.[0]?.toUpperCase()}\n            </Avatar>\n          }\n          title={\n            <Typography className={classes.cardTitle}>\n              {capitalizeFirstLetter(comment.name)}\n            </Typography>\n          }\n          subheader={date}\n        />\n        <CardContent>\n          <Typography className={classes.content} component=\"p\">\n            {comment.comment}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" onClick={() => setOpen(true)}>\n            Reply\n          </Button>\n        </CardActions>\n        {isOpen && (\n          <CommentForm\n            isReply\n            handleCancel={() => setOpen(false)}\n            commentId={comment.commentId}\n          />\n        )}\n      </Card>\n\n      {comment?.children?.length > 0 && nestedComments}\n    </Grid>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport CommentForm from \"./CommentForm\";\nimport { selectPost } from \"../../app/Slices/blog\";\nimport { useAppSelector } from \"../../app/hooks\";\nconst useStyles = makeStyles((theme:Theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 30,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n  },\n  title: {\n    textAlign: \"left\",\n    fontWeight: 900,\n    color: \"#383232e8\",\n    fontSize: 20,\n  },\n  content: {\n    display: \"flex\",\n  },\n  commentTitle: {\n    textAlign: \"left\",\n    fontWeight: 900,\n    color: \"#383232e8\",\n    fontSize: 18,\n  },\n  textArea: {\n    minHeight: 100,\n    border: \"1px solid #949494\",\n    fontSize: 15,\n    color: \"#212121\",\n    width: \"100%\",\n  },\n  rootCard: {\n    minWidth: 275,\n  },\n  rootNestedCard: {\n    minWidth: 275,\n    background: \" #d8d8ea\",\n    padding: 10,\n    margin: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  titleCard: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  button: {\n    display: \"flex\",\n  },\n}));\n\nexport default function FullWidthGrid() {\n  const classes = useStyles();\n  const { blogId } = useParams<{ blogId: string }>();\n  const posts = useAppSelector(selectPost);\n  const blog = useMemo(() => {\n    const newPost =\n      posts.find((element: any) => element?.blogId === blogId) || {};\n    return newPost;\n  }, [blogId, posts]);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography\n              className={classes.title}\n              component={\"h5\"}\n              variant={\"h5\"}\n            >\n              {blog?.title}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography className={classes.content} component={\"p\"}>\n              {blog?.content}\n            </Typography>\n          </Grid>\n          <CommentForm />\n          <Grid item xs={12}>\n            <Grid container spacing={3}>\n              {blog?.comments?.map((comment: any) => {\n                return <Comment comment={comment} />;\n              })}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Layout from \".//components/Header\";\nimport Container from \"@material-ui/core/Container\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport BlogList from \"./components/BlogList\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport { setPosts } from \"./app/Slices/blog\";\nimport { useAppDispatch } from \"./app/hooks\";\nimport { get } from \"idb-keyval\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const getPosts = async () => {\n      get(\"posts\").then((value) => {\n        const posts = JSON.parse(value) || [];\n        dispatch(setPosts(posts));\n      });\n    };\n    getPosts();\n  }, [dispatch]);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Layout>\n          <div></div>\n        </Layout>\n        <Container>\n          <Switch>\n            <Route exact path=\"/blog_post/\">\n              <BlogList />\n            </Route>\n            <Route exact path=\"/blog_post/blog-details/:blogId\">\n              <BlogDetails />\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport blogReducer from './Slices/blog';\n\nexport const store = configureStore({\n  reducer: {\n     blogReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}